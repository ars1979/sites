# filename: conf/docs/reference/processors/dataObj.cfg
# path: /docs/configs/marker

############################################################
##
## Reference  : Processors : DataObj
##
############################################################

view_name: &view_name "Reference  : Processors : DataObj"

include conf/elements/html-basic.cfg
include conf/elements/html-datatables.cfg

include conf/elements/ace.cfg

include conf/docs/navbar.cfg

navbar: &navbar
	**docs_navbar

templates:

	value_table: &value_table
		<<: *datatable_js
		data: '{{json(values)}}'
		columns:
			- title: Name
			- title: Type
			- title: Description										
			- title: Required
			- title: Defualt Value
		other: |
			searching: false,
			paging: false,

View: &view
	content:
		-
			**div
			content:
				-
					**h3
					class: page-header
					value: 'Reference  : Processors : DataObj : Create'
				-
					**h4
					value: Description					
				-
					**p
					value: |
						The DataObj processor is used to store values in the temporary location, self.top.$store.
				-
					**p
					value: |						
						Other elemetns in the tree can access these values from the top using markers, {{"\{\{$store[:$key etc.]\}\}".html_escape()}}.					
				-
					**h4
					value: Usage
				-
					**ace
					id: ace-1
					code: |
						# full syntax
						type: lib.processors.dataObj.Create
						data: 
							# data attributes
							...
						
						# short syntax
						\**dataObjCreate
						data: 
							# data attributes
							...							
				-
					**h4
					value: Attributes					

				-
					<<: *value_table
					id: dataObj
					values:
						- 
							- type
							- Class
							- Path to Class
							- Required
							- ""
						- 
							- data
							- Attributes
							- Data Attributes
							- Required
							- ""					
				-
					**h4
					value: Data Attributes

				-
					<<: *value_table
					id: dataAttributes
					values:
						- 
							- value
							- Marker
							- a marker that points to data 
							- Required
							- ""
						- 
							- value
							- String/Raw
							- data expressed within the config
							- Required
							- ""
						- 
							- format
							- String
							- "format of value: csv, dict, int, json, list, python, string, xml, yaml"
							- Required
							- string								
						- 
							- entry
							- Marker
							- location in value to load or store
							- ""
							- ""
						- 
							- store
							- String
							- If provided, loaded data will be stored in this location
							- "Required"
							- ""
						- 
							- reader
							- String
							- parse data as 'list' or 'dict'
							- "CSV only"
							- "dict"
						- 
							- kwargs
							- Dict
							- Additional formatting options
							- "CSV only"
							- ""
						- 
							- merge
							- Bool
							- Append this data to existing dataobject
							- ""
							- ""							
							
				-
					<<: *h4
					value: Example

				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-1"
							content:
								**ace
								code: |
									content:
										# CSV Data
										-
											process:
												\**dataObjCreate
												data:
													store: server
													format: csv
													kwargs:
														skipinitialspace: True
														quotechar: '"'
													value: |
														"computer", "OS"
														"IBM", "linux"			
										-
											value: |
												Computer Brand: \{\{server:computer\}\}</br>
												Operating System: \{\{server:OS\}\}</br>

										# Dict Data
										-
											process:
												\**dataObjCreate
												data:
													store: server
													format: dict
													#format: python #this would also work
													value: '{computer: "Dell", OS: "Windows XP"}'
										-
											value: |
												Computer Brand: \{\{server:computer\}\}</br>
												Operating System: \{\{server:OS\}\}</br>

										# JSON Data
										-
											process:
												\**dataObjCreate
												data:
													store: server
													format: dict
													value: '{"computer": "Acer", "OS": "Windows 10"}'
										-
											value: |
												Computer Brand: \{\{server:computer\}\}</br>
												Operating System: \{\{server:OS\}\}</br>

										# XML Data
										-
											process:
												\**dataObjCreate
												data:
													store: server
													format: xml
													value: |
														<xml>
															<computer>iPad</computer>
															<OS>iOS</OS>
														</xml>
													entry: xml
													
										-
											value: |
												Computer Brand: \{\{server:computer\}\}</br>
												Operating System: \{\{server:OS\}\}</br>
												
										# YAML Data
										-
											process:
												\**dataObjCreate
												data:
													store: server
													format: yaml
													value: |
														computer: Samsung
														OS: Android
										
										-
											value: |
												Computer Brand: \{\{server:computer\}\}</br>
												Operating System: \{\{server:OS\}\}</br>
										
										# Raw Data
										-
											process:
												\**dataObjCreate
												data:
													store: server
													format: raw
													value: 
														computer: "MacBook"
														OS: "MacOS"		
										-
											value: |
												Computer Brand: \{\{server:computer\}\}</br>
												Operating System: \{\{server:OS\}\}</br>
												

						-
							name: Output
							id: "html-1"
							content:
								**ace
								mode: html
								code: |
									Computer Brand: IBM</br>
									Operating System: linux</br>
									Computer Brand: Dell</br>
									Operating System: Windows XP</br>
									Computer Brand: Acer</br>
									Operating System: Windows 10</br>
									Computer Brand: iPad</br>
									Operating System: iOS</br>
									Computer Brand: Samsung</br>
									Operating System: Android</br>
									Computer Brand: MacBook</br>
									Operating System: MacOS</br>							
					
					
include conf/docs/template.cfg