# filename: conf/docs/configs/marker.cfg
# path: /docs/configs/marker

############################################################
##
## Design  : Processors
##
############################################################

view_name: &view_name "Design  : Processors"

include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg
include conf/elements/html-datatables.cfg
include conf/docs/reference/processors/templates.cfg

include conf/elements/ace.cfg

include conf/docs/navbar.cfg

navbar: &navbar
	**docs_navbar

View: &view
	content:
		-
			**div
			content:
				-
					**h3
					class: page-header
					value: 'Design  : Processors'
				-
					**p
					value: |
						<b>Processors</b> add functionality to content blocks for perfoming actions, such 
						as, redirecting vistors to other webpages, connecting to data sources, sending emails,
						creating business logic and much more.
				-
					**spacer
					height: 20						
				-
					**h4
					value: Using Processors			
				-
					**p
					value: |
						A proccessor can be added to any content block using the attribute 
						{{keyword("process")}}.  Here is an example of a simple processor that will redirect a 
						user to another page.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-0"
							content:
								**ace
								code: |
									content:
										process:
											# redirect to home page
											type: lib.processors.redirect.Redirect
											url: '/'
				-
					**p
					value: |
						In the example above, the {{keyword("type")}} attribute instructs WebYAML to use  
						<i>lib.processors.redirect.Redirect</i> as the <b>processor class</b>.  The 
						{{"type".keyword()}} attribute is required and must contain the full path to a 
						processor class.
				-
					**p
					value: |						
						Once instantiated a processor class will be given all of the attributes assoicated with 
						a processor.  Processor classes use these attributes as instructions for performing 
						actions, for instance, <i>lib.processors.redirect.Redirect</i> will redirect a user to the 
						url defined in the attribute {{keyword("url")}}.  
				-
					**spacer
					height: 20						
				-
					**h4
					value: Conditional Processing
					id: conditional
				-
					**p
					value:
						Multiple processors can be arranged in complex structures to form a <b>processor 
						tree</b>.  Each processor in a tree may include the attributes {{keyword("true")}} 
						and {{keyword("false")}}.  If the action of a processor is successful then the tree 
						continues to processors contained in the attribute {{keyword("true")}}.  Likewise, if 
						the action was unsucessful the tree will continue to processors contained in 
						{{keyword("false")}}.
				-
					type: lib.elements.tabs.Tabs
					content:						
						-
							name: YAML
							id: "yaml-0.2"
							content:
								**ace
								code: |
									content:
										process:
											# is the current visitor logged in?
											type: lib.processors.logic.Evaluate
											expression: '\{\{exists(session:login)\}\}'
											false:
												# no, redirect to login page
												type: lib.processors.redirect.Redirect
												url: '/login'
											true:
												# yes, redirect to dashboard
												type: lib.processors.redirect.Redirect
												url: '/dashboard'
				-
					**spacer
					height: 20						
				-
					**h4
					value: Conditional Content
				-
					**p
					value: |
						Processor trees and conditional processing concepts can also be used to create 
						conditional content.  To create conditional content, use the {{keyword("content")}} 
						attribute inside of a {{keyword("true")}} or {{keyword("false")}} attribute.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-1"
							content:
								**ace
								code: |
									content:
										process:
											# is the current visitor logged in?
											type: lib.processors.logic.Evaluate
											expression: '\{\{exists(session:login)\}\}'
											false:
												# no, give link to login page
												content:
													\**a
													value: You must login
													url: '/login'
											true:
												# yes, show contnet
												content:
													value: "Authorized Content"
				-
					**spacer
					height: 20						
				-
					**h4
					value: Sequential Processing
					
				-
					**p
					value: |
						Sometimes many actions will need to be perfomed in a row.  To accomplish this add processors using YAML list syntax, just like content blocks.  
						
				-
					**p
					value: |
						Here is an exmple of a list of processes to be performed in succession.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-0.1"
							content:
								**ace
								code: |
									content:
										process:
											-
												# remove user session
												type: lib.processors.session.Kill
											-
												# redirect to login page
												type: lib.processors.redirect.Redirect
												url: '/login'

				-
					**p
					value: |
						In the example above, the processors will continue to be performed in order until a processor returns an unhandled False.
						
				-
					**spacer
					height: 20						
				-
					**h4
					value: Short Syntax						
				-
					**p
					value: |
						To make it easier to use processors, WebYAML inculdes the configuration file
						<i>core/conf/processors/core.cfg</i>.  This file provides <b>short names</b> for comonly used procesors.  
						To use these names replace the attribute {{keyword("type")}} with the short name.  See the chart below for a full list of short names.
						
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-0.3"
							content:
								**ace
								code: |
									content:
										process:
											# redirect to home page
											\**redirect
											url: '/'						
				-
					**spacer
					height: 20						

				# Reference Chart
				-
					**processors_table
		-
			**spacer
			height: 20					
		-
			value: |
				<nav aria-label="...">
					<ul class="pager">
						<li class="previous">
							<a href="/docs/design/templates">
								<span aria-hidden="true">&larr;</span>
								Templates
							</a>
						</li>
						<li class="next">
							<a href="/docs/design/data">
								Data Objects
								<span aria-hidden="true">&rarr;</span>
							</a>
						</li>
					</ul>
				</nav>

		-
			**spacer
			height: 20					
					
include conf/docs/template.cfg