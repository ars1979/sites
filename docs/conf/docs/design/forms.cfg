# filename: conf/docs/design/forms.cfg
# path: /docs/design/forms

############################################################
##
## Design  : Forms
##
############################################################

view_name: &view_name "Design  : Forms"

include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg
include conf/elements/html-datatables.cfg
#include conf/docs/reference/processors/templates.cfg
include conf/elements/html-form.cfg

include conf/elements/ace.cfg


include conf/docs/navbar.cfg

navbar: &navbar
	**docs_navbar

View: &view
	content:
		-
			**div
			content:
				-
					**h3
					class: page-header
					value: *view_name
				-
					**p
					value: |
						WebYAML includes libraries for creating forms for your applications. The core library <i>conf/elements/html-forms.cfg</i>, contains <b>content block</b> templates for forms and form fields.  These templates are based on the classes <i>lib.elements.form.Form</i> and <i>lib.elements.field.Input</i>.
				-
					**spacer
					height: 20						
				-
					**h4
					value: Designing Forms			
				-
					**p
					value: |
						The easiest way to design forms in WebYAML is to use the core library 
						<i>conf/elements/html-forms.cfg</i>.  This library contains <b>content block</b> 
						templates for common form elements.  
				-
					**p
					value: |						
						The example below uses this library to layout a simple login view.  Explanations of each 
						field type can be found <a href="#fields">below</a>.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-0"
							content:
								**ace
								code: |
									# filename: conf/login.cfg
									\include conf/elements/html-form.cfg

									view: &view
										content:
											-	
												\**h4
												value: Please Login
											-
												\**form
												name: login
												content: # fields
													-
														\**textbox
														label: Username
														name: username
														required:
													-
														\**password
														label: Password
														name: password
														required:
													-
														\**button
														name: login

									\include conf/template.cfg

						-
							name: HTML
							id: "html-0"
							content:
								**ace
								content:
									# filename: conf/login.cfg
									#include conf/elements/html-form.cfg
									#view: &view
									-
										**h4
										value: Please Login
									-	
										**form
										name: login
										content: # fields
											-
												**textbox
												label: Username
												name: username
												required:
											-
												**password
												label: Password
												name: password
												required:
											-
												**button
												name: login

									#include conf/template.cfg
						-
							name: Preview
							id: "preview-0"
							content:
								**panel_noheader
								class: row
								content:
									-
										**h4
										value: Please Login
									-	
										**form
										name: login
										content: # fields
											-
												**textbox
												label: Username
												name: username
												required:
											-
												**password
												label: Password
												name: password
												required:
											-
												**button
												name: login

				-
					**spacer
					height: 20						
				-
					**h4
					value: Page Templates			
				-
					**p
					value: |
						The html-form library is intended to be used with Bootstrap and jQuery. Your 
						application pages must include jQuery and Bootstrap's javascript and css files.  
				-
					**p
					value: |						
						Here is an example Page Template to be used with the example above.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-1"
							content:
								**ace
								code: |
									# filename: conf/tempalte.cfg
									\include conf/elements/html-basic.cfg

									content:
										\**html
										content:
											-
												\**head
												content:
													-
														\**responsive
													-
														\**js
														value: '/static/bower_components/jquery/dist/jquery.min.js'
													-
														\**js
														value: '/static/bower_components/bootstrap/dist/js/bootstrap.min.js'
													-
														\**css
														value: '/static/bower_components/bootstrap/dist/css/bootstrap.min.css'														
											-
												\**body
												content:
													\**view
				-
					**spacer
					height: 20						
				-
					**h4
					value: Validating Forms			
				-
					**p
					value: |
						Sometimes it is important to validate forms and fields before processing. The most commonly used validation method is checking for required fields.  
				-
					**p
					value: |
						The easiest way to inform WebYAML that a field is required, is to add the {{keyword("required")}} attribute to your field configuration. This attribute does not need a value, but DO NOT forget to place a colon following the attribute.
				-
					**ace
					id: ace-4
					code: |
						\**textbox
						label: Username
						name: username
						required:
						
				-
					**p
					value: |
						For more complex validation rules see the <a href="/docs/design/forms#advancedvalidation">Advanced Form Validation</a> section below.
				-
					**spacer
					height: 20						
				-
					**h4
					value: Form Data			
				-
					**p
					value: |
						By default field values are submitted as a HTTP POST data.  To access a value from a field use a <a href="/docs/design/markers#data"><b>marker</b></a> with the syntax {{post:$name}} where $name is the {{keyword("name")}} attribute of a field element.
				-
					**spacer
					height: 20						
				-
					**h4
					value: Processing Forms			
				-
					**p
					value: |
						
						
						Typically, when a form is submitted, an application should perform some action.  The <b>**form</b> element uses the attribute {{keyword("postprocess")}} to define one or more processes to be performed after a form is validated.  The {{keyword("postprocess")}} attribute must contain a valid <a href="/docs/design/processors#conditional"><b>processor tree</b></a> as defined in the documetnation.
				-
					**p
					value: |
						The example belows uses processors to authenticate a user, store thier details in a session, and redirect successful logins to a dashboard page.

				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-2"
							content:
								**ace
								code: |
									# filename: conf/login.cfg
									\include conf/elements/html-form.cfg
									\include conf/mydb.cfg

									view: &view
										content:
											-
												\**h4
												value: Please Login
											-
												\**form
												name: login
												content: # fields
													-
														**textbox
														label: Username
														name: username
														required:
													-
														**password
														label: Password
														name: password
														required:
													-
														**button
														name: login
												
												# Process only if the form has been validated
												postprocess:
													# Query the database for a user
													\**mysqlSelect
													conf:
														# Database connection settings
														host: localhost
														user: webyaml
														db: webyaml
														passwd: webyaml
														
													# SQL Statement
													sql: |
														SELECT * 
														FROM user 
														WHERE user = "\{{post:username\}}"
														AND password = "\{{sha256(post:password)\}}"
														LIMIT 1
													# store the query result as \{\{user\}\}
													reader: record #single record
													result:
														store: user
														
													false:
														# login unsucessful
														content:
															\**div
															class: 'danger text-center'
															value: 'Bad Username or Password'
															
													true:
														# login successful.  Store \{{user\}} in the Session
														\**sessionCache
														cache:
															login: True
															user: '\{{user\}}'
														
														true:
															# redirect to dashboard
															\**redirect
															url: '/dashboard'
												

				-
					**p
					value: |
						The example above uses three processors.  The first processor, <a href="/docs/reference/processors/mysql#select"><b>**mysqlSelect</b></a>, is used to to authenticate a user.  The {{keyword("sql")}} attribute defines a SQL query that will search for a user with a  username and password that matches the form fields.  For security purposes the password in the database is encoded as a sha256 hash. 
				-
					**p
					value: |
						If the datbase query returns a result and the <i>user</i> <a href="/docs/design/data"><b>data object</b></a> is sucessfully stored, then the processor tree will continue.  Otherwise no further processing will be performed.  The form will be re-renderd and include an error message defined in the {{keyword("false")}} attribute.
				-
					**p
					value: |
						If the processor tree is allowed to continue the next processor is <a href="/docs/reference/processors/session#cache"><b>**sessionCache</b></a>.  This processor will store the <i>user</i> data object in the users session.  This session value can be used later, for instance to check if a user is logged in.  After the session is updated the processor will return True, and the tree will contiune to the last processor, <a href="/docs/reference/processors/redirect"><b>**redirect</b></a>.  As the name implies, this processor will redirect the user to another page.  In this case the user is redirected to the url <i>/dashboard</i>.
			
				-
					**spacer
					height: 20				

				# Reference Chart
				#-
				#	**processors_table
				#-
				#	**spacer
				#	height: 20									
				-
					**h4
					value: Form Elements
					id: fields
				-
					**p
					value: |
						Here are the basic form elements.

				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-9
								code: |
									\**textbox
									name: textbox
									label: Textbox
									value: Textbox
									help: Optional helpful text
									# other html attributes
									attributes:
										placeholder:  Shown if Textbox is empty
						-
							**div6
							content:
								**textbox
								name: textbox
								label: Textbox
								value: Textbox
								help: Optional helpful text
								# other html attributes
								attributes:
									placeholder:  Shown if Textbox is empty
				-
					**rule
				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-10
								code: |
									\**password
									name: password
									label: Password
									value: password
									help: Optional helpful text
									# other html attributes
									attributes:
										placeholder:  Shown if Password is empty
						-
							**div6
							content:
								**password
								name: password
								label: Password
								value: password
								help: Optional helpful text
								# other html attributes
								attributes:
									placeholder:  Shown if Password is empty
								
				-
					**rule
				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-11
								code: |
									\**textarea
									name: textarea
									label: Textarea
									value: textarea
									help: Optional helpful text
									# other html attributes
									attributes:
										placeholder:  Shown if Textarea is empty
										rows: 6
						-
							**div6
							content:
								**textarea
								name: textarea
								label: Textarea
								value: textarea
								help: Optional helpful text
								# other html attributes
								attributes:
									placeholder:  Shown if Textarea is empty
									rows: 6
				-
					**rule
				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-12
								code: |
									\**dropdown
									name: dropdown
									label: Dropdown
									value: Option B
									values:
										- ""
										- Option A
										- Option B
										- Option C
									help: Optional helpful text
									# data:
									# 	see reference for using data objects
						-
							**div6
							content:
								**dropdown
								name: dropdown
								label: Dropdown
								value: Option B
								values:
									- ""
									- Option A
									- Option B
									- Option C
								help: Optional helpful text
				-
					**rule
				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-13
								code: |
									\**radio
									name: radio
									label: Radio
									values:
										- Option A
										- Option B
										- Option C
									value: Option B
						-
							**div6
							content:
								**radio
								name: radio
								label: Radio
								values:
									- Option A
									- Option B
									- Option C
								value: Option B
				-
					**rule
				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-14
								code: |
									\**checkbox
									label: checkbox
									name: Checkbox
									value: Option A
									text: Option A								
						-
							**div6
							content:
								**checkbox
								label: checkbox
								name: Checkbox
								value: true
								text: Option A
								
				-
					**rule
				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-15
								code: |
									\**file
									name: file
									label: File
									help: Optional helpful text
						-
							**div6
							content:
								**file
								name: file
								label: File
								help: Optional helpful text
								
				-
					**rule
				-
					**div12
					content:
						-
							**div6
							content:
								**ace
								id: ace-16
								code: |
									\**button
									name: Button
						-
							**div6
							content:
								**button
								name: Button
								
				-
					**spacer
					height: 20							
				-
					**h4
					value: Advanced Form Validation
					id: advancedvalidation
				-
					**p
					value: |
						More advanced validation will require adding web.py validators to your form elements with the {{keyword("validator")}} attribute.  Here are some example uses for validators.					

				-
					**p
					value: |
						Here is an example to check if two fields have matching values.  In this case the fields <i>password</i> and <i>password_again</i>.  Also both 

				-
					**ace
					id: ace-5
					code: |
						# password change form that requires a 
						# user to enter their new password twice

						\**form
						name: change_password
						validators: 
							- web.form.Validator("Passwords didn't match.", lambda i: i.password == i.password_again)
						content:
							-
								\**h4
								value: Enter a new password
							-
								\**password
								label: Password
								name: password
								required:
							-
								\**password
								label: Confirm Password
								name: password_again
								required:
							...
						
						
				-
					**ace
					id: ace-6
					code: |
						# field requires a properly formated email address
						
						\**textbox
						label: Email Address
						name: email
						required:
						validators:
							- web.form.regexp('(?i)^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$', 'This is not a valid email address.')


				-
					**ace
					id: ace-7
					code: |
						# field requires a number between 1 and 10
						
						\**textbox
						label: Score (1 - 10)
						name: score
						required:
						validators:
							- web.form.regexp('\d+', 'You did not enter a number')
							- web.form.Validator('You entered a number less than 1', lambda x:int(x)>=1))
							- web.form.Validator('You entered a number greater than 10', lambda x:int(x)<=10))

				-
					**ace
					id: ace-8
					code: |
						# alternate way to make a required field

						\**textbox
						label: My Required Field
						name: requireme
						validators:
							- web.form.notnull
		-
			**spacer
			height: 20					
		-
			value: |
				<nav aria-label="...">
					<ul class="pager">
						<li class="previous">
							<a href="/docs/design/data">
								<span aria-hidden="true">&larr;</span> Data Objects
							</a>
						</li>
						<!--
						<li class="next">
							<a href="#">Newer <span aria-hidden="true">&rarr;</span></a>
						</li>
						-->
					</ul>
				</nav>

		-
			**spacer
			height: 20						
					
					
					
					
include conf/docs/template.cfg