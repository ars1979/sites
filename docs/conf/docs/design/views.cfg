# filename: conf/docs/design/views.cfg

############################################################
##
## Design  : Views
##
############################################################

view_name: &view_name "Design  : Views"

include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg
include conf/elements/html-datatables.cfg
include conf/elements/ace.cfg

include conf/docs/navbar.cfg

navbar: &navbar
	<<: *docs_navbar

View: &view
	content:
		-
			<<: *div
			content:
				-
					<<: *h3
					class: page-header
					value: *view_name
				-
					<<: *p
					value: |
						A <b>view</b> is a web page, API endpoint, or other generated file that is served via a web server.
				-
					<<: *spacer
					height: 20						
				-
					<<: *h4
					value: Configuration Files
					
				-
					**p
					value: |
						WebYAML <b>views</b> are defined in configuration files.  The file <i>conf/urls.cfg</i> is the only configuration file in WebYAML that <i><b>must</b></i> exist.  This file is the starting point for loading all views.
						
				-
					<<: *spacer
					height: 20						
				-
					<<: *h4
					value: Syntax
					
				-
					**p
					value: |
						Each view in WebYAML has a unique URL and at least one <a href="/docs/design/contentblocks"><b>content</b></a> configuration file.  These are defined using the following syntax.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-1"
							content:
								**ace
								code: |
									# Example View Definition
									-
										/path:
											conf: conf/path/filename.cfg
											
				-
					<<: *p
					value: |
						The configuration example above defines a single view as an item of a list.  To define multiple views in an application, add more views to the list.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-2"
							content:
								**ace
								code: |
									# filename: conf/urls.cfg
									
									# root/home view
									-
										/:
											conf: conf/home.cfg
									
									# about view
									-
										/about:
											conf: conf/about.cfg
									...
				-
					<<: *spacer
					height: 20						
				-
					<<: *h4
					value: Attributes
				-
					**p
					value: |
						Additional attributes can be added to views to help with some functionality.  Here is a full table of all available attributes.

				-
					<<: *datatable_js
					id: view_attributes
					values:
						- ["alias", "String/List", "One or more alternate urls for this view", "", ""]
						- ["cache", "Bool", "Cache this view to disk", "", ""]
						- ["conf", "String/List", "One or more configuration files", "Required", ""]
						- ["noindent", "Bool", "Do not indent elements", "", ""]
						- ["keepmarkers", "Bool", "Do not cleanup unused markers", "", ""]
						- ["header", "Bool", "Add headers to served files","",""]
						- ["debug", "Bool", "Show debugging information", "", ""]
						
					data: '{{json(values)}}'
					columns:
						-
							title: Name
						-
							title: Type							
						-
							title: Description										
						-
							title: Required
						-
							title:	Defualt Value
					other: |
						searching: false,
						paging: false,

				-
					<<: *spacer
					height: 20						
				-
					<<: *h4
					value: Includes
					
				-
					**p
					value: |
						Large applications can include other configuration files to segment view definitions in an organized way.  Here is an example of how an application my be structured.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-3"
							content:
								**ace
								code: |
									# filename: conf/urls.cfg
									
									...

									# Include Documetnation (/docs)
									\include conf/docs/urls.cfg					
						
						



		-
			**spacer
			height: 20					
		-
			value: |
				<nav aria-label="...">
					<ul class="pager">
						<!--
						<li class="previous">
							<a href="/docs/design/contentblocks">
								<span aria-hidden="true">&larr;</span>
								Content Blocks
							</a>
						</li>
						-->
						<li class="next">
							<a href="/docs/design/contentblocks">
								Content
								<span aria-hidden="true">&rarr;</span>
							</a>
						</li>
					</ul>
				</nav>

		-
			**spacer
			height: 20

include conf/docs/template.cfg