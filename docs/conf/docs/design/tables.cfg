# filename: conf/docs/design/tables.cfg
# path: /docs/design/forms

############################################################
##
## Design  : Forms
##
############################################################

view_name: &view_name "Design : Tables"

include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg
include conf/elements/html-datatables.cfg
include conf/elements/html-form.cfg

include conf/elements/ace.cfg

View: &view
	content:
		-
			**div
			content:
				-
					**h3
					class: page-header
					value: *view_name
				-
					**p
					value: |
						WebYAML includes libraries for creating tables in your applications. The core library <i>conf/elements/html-datatables.cfg</i>, contains <b>content block</b> templates used to render tables using the popular Datatables jQuery plugin.
				-
					**spacer
					height: 20						
				-
					**h4
					value: Designing Tables			
				-
					**p
					value: |
						The easiest way to design forms in WebYAML is to use the core library <i>conf/elements/html-datatables.cfg</i>.  This library contains <b>content block</b> templates for rendering <b>data objects</b> into tables.  
				-
					**p
					value: |						
						The example below uses this library to layout a simple table view.  The data in this table is loaded server side and passed as a javascript variable.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-0"
							content:
								**ace
								code: |
									# filename: conf/login.cfg
									\include conf/elements/html-datatables.cfg

									view: &view
										content:
											process:
												\**dataObjCreate
												data:
													format: list
													store: mytabledata
													value:
														- 
															en: one
															es: uno
														-
															en: two
															es: dos
														-
															en: three
															es: tres
											\**datatable_js
											values: '\{\{json(mytabledata)\}\}'
											columns:
												-
													title: English
													data: en
												-
													title: Spanish
													data: es
													
									\include conf/template.cfg
						
						-
							name: Preview
							id: "preview-0"
							content:
								**panel_noheader
								class: row
								content:
									process:
										**dataObjCreate
										data:
											format: list
											store: mytabledata
											value:
												- 
													en: one
													es: uno
												-
													en: two
													es: dos
												-
													en: three
													es: tres
									**datatable_js
									values: '{{json(mytabledata)}}'
									id: tbl-1
									columns:
										-
											title: English
											data: en
										-
											title: Spanish
											data: es
				-
					**p
					value: |						
						The example below uses this library to layout another table view.  The data in this table is loaded clent side via an ajax call to an REST API server.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-1"
							content:
								**ace
								code: |
									# filename: conf/login.cfg
									\include conf/elements/html-datatables.cfg

									view: &view
										content:
											\**datatable_ajax
											url: 'http://jsonplaceholder.typicode.com/posts'
											ajaxother: |
												"dataType": "jsonp",											
											columns:
												-
													title: ID
													data: id
												-
													title: Title
													data: title
												-
													title: Body
													data: body
													
													
									\include conf/template.cfg
						
						-
							name: Preview
							id: "preview-1"
							content:
								**panel_noheader
								class: row
								content:
									**datatable_ajax
									id: tbl-2
									url: 'http://jsonplaceholder.typicode.com/posts'
									ajaxother: |
										"dataType": "jsonp",									
									columns:
										-
											title: ID
											data: id
										-
											title: Title
											data: title
										-
											title: Body
											data: body

				-
					**spacer
					height: 20						
				-
					**h4
					value: Page Templates			
				-
					**p
					value: |
						The html-form library is intended to be used with Bootstrap and jQuery. Your 
						application pages must include jQuery and Bootstrap's javascript and css files.  
				-
					**p
					value: |						
						Here is an example Page Template to be used with the example above.
				-
					type: lib.elements.tabs.Tabs
					content:
						-
							name: YAML
							id: "yaml-2"
							content:
								**ace
								code: |
									# filename: conf/tempalte.cfg
									\include conf/elements/html-basic.cfg

									content:
										\**html
										content:
											-
												\**head
												content:
													-
														\**responsive
													-
														\**js
														value: '/static/bower_components/jquery/dist/jquery.min.js'
													-
														\**js
														value: '/static/bower_components/bootstrap/dist/js/bootstrap.min.js'
													-
														\**js
														value: '/static/bower_components/datatables/media/js/jquery.dataTables.min.js'
													-
														\**js
														value: '/static/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.min.js'	
													-
														\**css
														value: '/static/bower_components/bootstrap/dist/css/bootstrap.min.css'
													-
														\**css
														value: '/static/bower_components/datatables-plugins/integration/bootstrap/3/dataTables.bootstrap.css'
											-
												\**body
												content:
													\**view
		-
			**spacer
			height: 20					
		-
			value: |
				<nav aria-label="...">
					<ul class="pager">
						<li class="previous">
							<a href="/docs/design/forms">
								<span aria-hidden="true">&larr;</span> Forms
							</a>
						</li>
						<li class="next">
							<a href="/docs/design/javascript">
								Javascript
								<span aria-hidden="true">&rarr;</span>
							</a>
						</li>
					</ul>
				</nav>

		-
			**spacer
			height: 20						
					
					
					
					
include conf/docs/template.cfg