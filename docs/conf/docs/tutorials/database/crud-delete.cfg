# filename: /docs/examples/database/crud.cfg

############################################################
##
## Examples  : Database : CRUD
##
############################################################

view_name: &view_name "Database : CRUD : Delete"

include conf/elements/html-basic.cfg
include conf/elements/html-form.cfg
include conf/elements/html-datatables.cfg
include conf/elements/html-bootstrap-panel.cfg

include conf/elements/ace.cfg

templates:

	value_table: &value_table
		**datatable_js
		data: '{{json(values)}}'
		columns:
			- title: Name
			- title: Description										
			- title: Required
			- title: Defualt Value
		other: |
			searching: false,
			paging: false,
		#ordering: false,

View: &view
	content:
		-
			**div
			content:
				-
					**h3
					class: page-header
					value: *view_name
				-
					**p
					value: |
						No one is perfect therefore sometimes things that are created must be destoryed.  The delete view, <i>/post/delete</i>, can be used to remove unwanted records from a database.
				-
					**spacer
					height: 20
				-
					**h4
					class: page-header
					value: conf/post/delete.cfg
					id: create
				-
					**p
					value: |
						The view <i>/post/delete</i> is rendered using the configuration file <i>conf/post/delete.cfg</i>.  This configuration file shares some common elements with other views in this tutorial, but it also has a key difference.  The first differece is that the form used in this view only to force the user to confirm the request to delete the record.
				-
					**ace
					id: ace-create1
					code: |
						# filename: conf/post/delete.cfg
						
						\include conf/elements/html-basic.cfg
						\include conf/elements/html-form.cfg
						\include conf/settings/db.cfg
						
						# define the anchor &view_name
						view_name: &view_name "Post : Delete"
						
						# define the anchor &view
						view: &view
							content:
								-
									\**h3
									class: page-header
									value: Read a Post
								-
									\**form
									name: read
									
									# form fields
									content:
										-
											\**checkbox
											name: delete
											required:
											label: Yes, I want to delete this record.
										-
											\**button
											name: Submit
											color: primary
											
									# Update the database record
									postprocess:
										**update
										sql: |										
											UPDATE post
											SET
												status = 'deleted'
											WHERE id = \{\{get:id\}\}
										
										# redirect to list
										true:
											\**redirect
											url: /post/list
				
						# Page Template 
						# The aliases **view_name and **view 
						# will be used in the template
						\include conf/template.cfg
				-
					**p
					value: '{{html_markers(code)}}'
					code: |						
						In the configuration above, the marker {{get:id}} is used as part of a SQL query to delete a record.  This marker is replaced by the value of the GET variable <i>id</i> before processing.  Therefore this page must be loaded with the variable <i>id</i> as a key-value pair in the query string. For example, if the requested view is <i>http://localhost:8080/post/delete?id=1</i>, then the <b>**update</b> processor will be used to change the status of that record.
				-
					**p
					value: '{{html_markers(code)}}'
					code: |						
						Notice, that the record is not really deleted, it is actually updated to change the status of the record.  In the next two views, list and media, we will filter these records from our queries.  Therefore it will appear as if the record was removed from the database.  This is a very comon database pratice and it is reccomend that this convention should be followed. 
				-
					**spacer
					height: 20

		-
			**spacer
			height: 20					
		-
			value: |
				<nav aria-label="...">
					<ul class="pager">
						<li class="previous">
							<a href="/docs/tutorials/database/crud/update">
								<span aria-hidden="true">&larr;</span>
								Update View
							</a>
						</li>
						<li class="next">
							<a href="/docs/tutorials/database/crud/list">
								List View
								<span aria-hidden="true">&rarr;</span>
							</a>
						</li>
					</ul>
				</nav>

		-
			**spacer
			height: 20

include conf/docs/template.cfg