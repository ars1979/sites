# filename: conf/docs/develop/classes/views.cfg

############################################################
##
## Develop  : Views
##
############################################################

view_name: &view_name "Develop  : Classes : View"

include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg
include conf/elements/html-datatables.cfg
include conf/elements/ace.cfg

include conf/docs/navbar.cfg

navbar: &navbar
	<<: *docs_navbar

View: &view
	content:
		-
			<<: *div
			content:
				-
					<<: *h3
					class: page-header
					value: *view_name
				-
					<<: *p
					value: |
						The function of a WebYAML application is to return responses to a web server.  These responses are called Views.  A <b>view</b> is a web page, API endpoint, or any other output generated by WebYAML. 
				-
					<<: *spacer
					height: 20						
				-
					<<: *h4
					value: classes.view.View
				-
					**p
					value: |
						WebYAML applications create a new <i>View object</i> for every request.  These objects are based on the class <i>classes.view.View</i>.  This class contains methods for reading configuration files, analyizing requested urls, storing variables and data included with the request, loading content configuration files, and returning a view or error message for each request.
				-
					**p
					value: |
						WebYAML is based on web.py and follows its conventions.  In addition to methods that make views, the class <i>classes.view.View</i> also contains the methods GET and POST.  These methods handle requests for each type.  After collecting variables, the both methods call the method <i>view.View.run</i>.
				-
					<<: *spacer
					height: 20						
				-
					<<: *h4
					value: classes.view.View.run
				-
					**p
					value: |	
						klsdhfksd
						
				-
					process:
						**dataObjCreate
						data:
							value: ' datetime.datetime.today() - datetime.timedelta(days=1) '
							store: yesterday
							format: python
				-			
					format: '%Y%m%d'
					value: '{{date(yesterday)}}'
							
		
						

include conf/docs/template.cfg