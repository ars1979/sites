# filename: conf/docs/home.cfg
# path: /docs/home

############################################################
##
## Getting Started : Application Server
##
############################################################

view_name: &view_name "Getting Started: Application Server"

include conf/elements/html-basic.cfg
include conf/elements/ace.cfg

include conf/docs/navbar.cfg

navbar: &navbar
	<<: *docs_navbar

View: &view
	content:
		-
			<<: *div
			content:
				-
					<<: *h3
					class: page-header
					value: "Getting Started : Application Server"

				-
					<<: *p
					value: |
						Applications and APIs can be be hosted using the CherryPY websever or Apache 
						with mod_wsgi.
				-
					<<: *h4
					value: CherryPY Web Server
				-
					<<: *p
					value: |
						CherryPY is useful for development and for hosting applications in constrained 
						environments such as embedded (IoT) devices.  WebYAML has been proven 
						to work on systems with 64MB of RAM. However, at least 128MB of RAM is 
						recommended.
				-
					<<: *p
					value: |
						To launch your application using the CherryPy server you will use a terminal or ssh 
						connection to the server.  Start the server on port 8080 with the following 
						commands where {mysite} is the application you want to serve:
				-
					**ace
					id: ace-1
					mode: sh
					code: |
						cd /path-to-framework/sites/{mysite}/
						./app.py
				-
					<<: *p
					value: |				
						After a few seconds the following line should appear in your terminal:
				-
					**ace
					id: ace-2
					code: |
						http://0.0.0.0:8080/
				-
					<<: *p
					value: |
						Any output from the application will appear in the terminal below that line.  To 
						stop the server press "ctrl+c" on your keyboard.
				-
					<<: *p
					value: |
						If you would like to serve the application on a different port, provide the port 
						number as an argument to the app.py script. Note: root access is required to 
						use a port below 1024.
				-
					**ace
					id: ace-3
					mode: sh
					code: |
						/path-to-framework/sites/{mysite}/app.py 80
				-
					<<: *p
					value: |
						If you want to run the server in the background you can do something like this:
				-
					**ace
					id: ace-4
					mode: sh
					code: |
						/path-to-framework/sites/{mysite}/app.py 80 >> /var/log/{mysite}.log 2>&1 &
		-
			<<: *spacer
			height: 20			

include conf/docs/template.cfg