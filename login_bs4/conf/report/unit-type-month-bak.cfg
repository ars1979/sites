# filename: conf/report/unit-type-month.cfg

############################################################
#
#	create CSV from mysql query
#
############################################################

# Database settings
include conf/settings/db.cfg


# vars
year: 2018

# display csv formated data
value: '{{csv(export)}}'

# {{csv()}} function  requires a list of lists 
# [[heading1, heading2, heading3], [value1, value2, value3], [...], ...]


# generate csv data
process:
	-
		# create list of lists object and add header row
		**dataObjCreate
		data:
			store: export
			format: list
			value:
				# first row
				-
					# header cols
					- type
					- jan
					- feb
					- mar
					- apr
					- may
					- jun
					- jul
					- aug
					- sep
					- oct
					- nov
					- dec
	-
		# select a list of possible types for range
		**select
		sql: |
			SELECT cic_location.type
			FROM cic_location, cic_transaction
			WHERE cic_transaction.location = cic_location.id
			AND DATE_FORMAT(cic_transaction.date,"%Y") = "{{year}}"
			GROUP BY type
			ORDER BY type				
		result:
			store: types
	
	-
		# loop through types
		**loop
		key: type
		data:
			value: '{{types}}'
			
		subprocess:
			-
				# create row object and add first col
				**dataObjCreate
				data:
					# start a new row 
					store: row
					format: list
					
					# first col in the row is type 
					value: '[ "{{escape(type:type)}}" ]'
					
			-
				# loop through every month
				**loop
				key: month
				data:
					value: 
						- "01"
						- "02"
						- "03"
						- "04"
						- "05"
						- "06"
						- "07"
						- "08"
						- "09"
						- "10"
						- "11"
						- "12"
				subprocess:
				
					-
						# query each type and month and sum units for cell			
						**select
						sql: |
							SELECT SUM(cic_transaction.unit) AS units
							FROM cic_location, cic_transaction
							WHERE cic_transaction.location = cic_location.id
							AND cic_location.type = "{{type:type}}"
							AND DATE_FORMAT(cic_transaction.date,"%Y-%m") = "{{year}}-{{month}}"
							
						reader: record
						result:
							store: units
							
					-
						# append column to row
						**dataObjCreate
						data:
							store: row
							merge: append
							value: '{{units:units}}'
							
					-
						# unset units to avoid repeating values
						**dataObjCreate
						data:
							store: units
							value: false
							
			-
				# add row to export
				**dataObjCreate
				data:
					store: export					
					format: list
					merge: append				
					value: '{{row}}'

	