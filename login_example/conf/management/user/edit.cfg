# filename: conf/management/user/edit.cfg
# path: /management/user/edit/$id

############################################################
##
## Management : User : Edit
##
############################################################

# Includes

# Html elements
include conf/elements/html-basic.cfg
include conf/elements/html-bootstrap-panel.cfg
include conf/elements/html-datatables.cfg
include conf/elements/html-form.cfg

# Database settings
include conf/settings/db.cfg

# Vars

# Page name
view_name: &view_name "Management : User : Edit"

# View
view: &view
	content:
		# Display a Header
		-
			**h3
			value: *view_name
			class: page-header
			
		# Place a bootstrap panel on the page
		-
			**panel
			title: Edit User
			
			# Place a button in the table header
			right: |
				<a class="btn btn-sm btn-default" href="/management/user/list">Cancel</a>	
			content:
			
				# Fetch form data from the database
				- 
					process:
						**select
						sql: |
							SELECT * 
							FROM user 
							WHERE id = {{path:arg0}}
							
						# The record is determined by the id given in the query string
						# path: /management/role/edit/$id
						# where $id is the id for the record in the database
						
						# store only first result as {{user}}
						result:
							entry: '{{0}}'
							store: user
							
				# Place a form in the panel
			
				# Form element
				-
					**form
					
					# Form fields
					content:
						-
							**hidden
							name: id
							# set value from database
							value: '{{user:id}}'				
						-
							**textbox
							name: user
							label: Username
							required:
							value: '{{user:user}}'
						-
							**password
							name: pass
							label: Change Password
							attributes:
								placeholder: Change Password (Optional)
						-
							**textbox
							name: first_name
							label: First Name
							required:
							value: '{{user:first_name}}'
						-
							**textbox
							name: last_name
							label: Last Name
							required:
							value: '{{user:last_name}}'
						-
							**dropdown
							name: group
							label: Group
							required:

							# Fetch options from database
							process:
								**select
								reader: list
								sql: |
									SELECT id, name
									FROM `group`
									WHERE status = 'active'
									ORDER BY name
								result:
									store: groups						
							
							# Add options to dropdown
							valuesObj: groups
							
							# Set value from database
							value: '{{user:group}}'
						-
							**dropdown
							name: role
							label: Role
							required:
							process:
								**select
								reader: list
								sql: |
									SELECT id, name
									FROM role
									WHERE status = 'active'						
									ORDER BY name DESC
								result:
									store: roles
							
							valuesObj: roles
							value: '{{user:role}}'
						-
							**dropdown
							name: status
							label: Status
							
							# define options
							values:
								- active
								- paused
								- stopped
							value: '{{user:status}}'							
						-
							**button
							name: Edit
							class: "pull-right"
								
					# Form Processing								
					postprocess:
					
						# Determine if a new password was given
						type: lib.processors.logic.Evaluate
						expression: "{{exists(post:pass)}}"
						
						# Yes, the password was changed
						'true':
							# Edit the record in the database
							**update
							sql: |
								UPDATE user
									SET
										user = '{{escape(post:user)}}',
										pass = '{{sha256(post:pass)}}',
										first_name = '{{html_escape(post:first_name)}}',
										last_name = '{{html_escape(post:last_name)}}',
										`group` = {{post:group}},
										role = {{post:role}},
										status = '{{html_escape(post:status)}}'
									WHERE
										id = {{post:id}}
							
							# Redirect to the list
							'true':
								type: lib.processors.redirect.Redirect
								url: '/management/user/list'
								
						# No, the password was not changed
						'false':
							# Edit the record in the database
							**update
							sql: |
								UPDATE user
									SET
										user = '{{post:user}}',
										first_name = '{{html_escape(post:first_name)}}',
										last_name = '{{html_escape(post:last_name)}}',
										`group` = {{post:group}},
										role = {{post:role}},
										status = '{{html_escape(post:status)}}'
									WHERE
										id = {{post:id}}
							
							# Redirect to the list
							'true':
								type: lib.processors.redirect.Redirect
								url: '/management/user/list'
						


include conf/template_private.cfg